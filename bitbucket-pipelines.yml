#  Run application tests, rubocop style checking, and brakeman security evaluation

image: ruby:3.0.3

pipelines:
  default:
    - parallel:
      - step:
          name: Test
          caches:
            - bundler
            - yarn
          services:
            - postgres
          script:
            # Install node, npm, yarn, nvm, and then upgrade the version of node
            - apt-get update
            - apt-get install -y nodejs npm
            - npm install -g yarn
            - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
            - export NVM_DIR="$HOME/.nvm"
            - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
            - nvm install 14.17.5
            # Install remaining dependencies
            - |
              apt-get install -y fonts-liberation libasound2 libatk-bridge2.0-0 libatspi2.0-0 \
              libdrm2 libgbm1 libgtk-3-0 libnspr4 libnss3 libxkbcommon0 xdg-utils libu2f-udev
            - wget "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
            - dpkg -i google-chrome*.deb
            # Use the CI-specific database config
            - cp config/database.ci.yml config/database.yml
            # Install gems and npm packages
            - bundle config set path vendor
            - bundle install
            - yarn install
            # Set up the DB and run the tests and checks
            - RAILS_ENV=test bundle exec rails db:create
            - bundle exec rails test
            - bundle exec rails test:system
            - bundle exec rubocop
            - bundle exec brakeman

definitions:
  caches:
    bundler: ./vendor
    yarn: ./node_modules
  services:
    postgres:
      image: postgres
      variables:
        POSTGRES_DB: 'cedar_admin_test'
        POSTGRES_USER: 'postgres'
        POSTGRES_PASSWORD: 'postgres'
